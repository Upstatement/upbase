/// Creates a triangle with just CSS.
///
/// @param {Number(px)} $size - One or two values: width height
/// @param {Color | List} $color - One or two color values: foreground background
/// @param {String} $direction - A direction: up, down, left, right, up-right, up-left, down-right, down-left
/// @link http://codepen.io/upstatement/pen/BNJKda See it on Codepen >
/// @link http://bourbon.io/docs/#triangle Thoughtbot Bourbon: Triangle >
/// @example scss - SCSS
/// .triangle {
///   @include triangle(100px, #bada55, down);
/// }
///
/// .triangle--complex {
///   @include triangle(100px 50px, #bada55 #000000, up-left);
/// }
///
/// @example css - CSS Output
/// .triangle {
///   height: 0;
///   width: 0;
///   border-left: 50px solid transparent;
///   border-right: 50px solid transparent;
///   border-top: 50px solid #bada55;
/// }
///
/// .triangle--complex {
///   height: 0;
///   width: 0;
///   border-top: 50px solid #bada55;
///   border-right: 100px solid #000000;
/// }
///
@mixin triangle($size, $color, $direction) {
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);
  height: 0;
  width: 0;

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height/2);

    @if $direction == up {
      border-bottom: $height solid $foreground-color;
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
    } @else if $direction == right {
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;
      border-top: $width solid $background-color;
    } @else if $direction == down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;
    } @else if $direction == left {
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
      border-top: $width solid $background-color;
    }
  } @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;

    @if $direction == up-right {
      border-left: $width solid $background-color;
    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left: $width solid $background-color;
    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == inset-up) {
    border-color: $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-down) {
    border-color: $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-right) {
    border-color: $background-color $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $width $height;
  } @else if ($direction == inset-left) {
    border-color: $background-color $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $width $height;
  }
}
